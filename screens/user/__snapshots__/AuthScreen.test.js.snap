// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
Object {
  "children": Array [
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        Object {
          "colors": Array [
            4294946749,
            4294951840,
          ],
          "endPoint": undefined,
          "locations": undefined,
          "startPoint": undefined,
        }
      }
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "white",
            "borderRadius": 10,
            "elevation": 5,
            "maxHeight": 400,
            "maxWidth": 400,
            "padding": 20,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.27,
            "shadowRadius": 8,
            "width": "80%",
          }
        }
      >
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "fontFamily": "open-sans-bold",
                "marginVertical": 8,
              }
            }
          >
            Email
          </Text>
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            errorText={false}
            keyboardType="email-address"
            label="Email"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            returnKeyType="next"
            style={
              Object {
                "borderBottomColor": "#ccc",
                "borderBottomWidth": 1,
                "paddingHorizontal": 2,
                "paddingVertical": 5,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
          <Text>
            Please enter a valid 
            Email
          </Text>
        </View>
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "fontFamily": "open-sans-bold",
                "marginVertical": 8,
              }
            }
          >
            Password
          </Text>
          <TextInput
            allowFontScaling={true}
            autoCapitalize="none"
            errorText={false}
            keyboardType="default"
            label="Password"
            minLength={5}
            onChangeText={[Function]}
            rejectResponderTermination={true}
            secureTextEntry={true}
            style={
              Object {
                "borderBottomColor": "#ccc",
                "borderBottomWidth": 1,
                "paddingHorizontal": 2,
                "paddingVertical": 5,
              }
            }
            underlineColorAndroid="transparent"
            value=""
          />
          <Text>
            Please enter a valid 
            Password
          </Text>
        </View>
        <View
          style={
            Object {
              "marginTop": 10,
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#C2185B",
                    },
                  ]
                }
              >
                Login
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "padding": 8,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#FFC107",
                    },
                  ]
                }
              >
                Switch to Sign Up
              </Text>
            </View>
          </View>
        </View>
      </View>
    </ViewManagerAdapter_ExpoLinearGradient>,
  ],
  "props": Object {
    "onLayout": [Function],
    "style": Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ],
  },
  "store": Object {
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
    Symbol(observable): [Function],
  },
  "type": "View",
}
`;
